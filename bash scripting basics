1. how to showcase the shells we have
cat /etc/shells

2. how to know the path of bash
which bash

3. how to create an shell script
touch helloscript.sh

4. give the shebang line for it
#! /bin/bash

5. how to save our output in a file
echo "Hello" > file.txt

6. how to come out  of cat editor
ctrl + d

7. how to do single and multiple lines of commenting
# This is a single line comment
: ' This is multiple line comment
This goes as follows'

8. how to give comments that can be seen on the terminal
cat << creative
This is a comment
That can be seen on 
the terminal
creative

9. give an example for if statements
 make sure that variables donot carry any spaces only the values inside square brackets does also if we are using integers they will always carry -eq , -gt like values
 but for strings we will use the traditional ==, != so on

 also for addressing the variables inside the square brackets we will use $ for variables

 count=20
 if [ $count -eq 20 ]
 then
     echo "The value is 20"
fi

 count=20
 if (( $count = 20 ))
 then
     echo "The value is 20"
fi


10. else
 count=20
 if [ $count = 20 ]
 then
     echo "The value is 20"
 else
     echo "The value is not 20"
fi

11. elif
count=20
 if [ $count = 20 ]
 then
     echo "The value is 20"
 elif [ $count > 20 ]
 then 
     echo " The value is greater than 20 "
 else
     echo "The value is not 20"
fi

12. and
if we are using traditional symbols then we have to use two square brackets else if we use jst wordings simply we can give one bracket
count=20
 if [ $count -lt 20 ] && [ $count -gt 30 ]
 then
     echo "The value is 20"
 else
     echo "The value is not 20"
fi

or
count=20
if [[ $count -gt 10 && $count -lt 20 ]]
then
     echo "The value is 20"
 else
     echo "The value is not 20"
fi
count=20
if [ $count -gt 10 -a $count -lt 20 ]
then
     echo "The value is 20"
 else
     echo "The value is not 20"
fi

13. or statement
same rules apply for or statement
count=20
if [ $count -gt 10 -o $count -lt 20 ]
then
     echo "The value is 20"
 else
     echo "The value is not 20"
fi

14. While loop
count=0
while [ $count -lt 10 ]
do 
    echo "$count"
    count=$((count+1))
done

15. until loop
count=0
while [ $count -gt 10 ]
do 
    echo "$count"
    count=$((count+1))
done


16. for loop
for i in 1 2 3 4 5
do
   echo "$i"
done 

or

for i in {0..19}
do
   echo "$i"
done 

or

17. break and continue

for (( i=0; i<=10; i++ ))
do
   if [ $i -eq 5 ]
   break and continue
   echo "$i"
done


18. simple user input
echo $1 $2 $3
if we inclue $0 we will be getting file name tooo

19. how to take multiple user input

args=('$@')
echo ${args[1]}

or
echo "$@" - prints all the input
echo "$#" - prints the lengths of the arrays

if we want to give document name with spaces 
document\ title1\

20. how to read input but through another file
while read line
do 
    echo $line
done > "${1:-/dev/stdin}"

21. for sending output and error respectively
ls -al 1> stdout.txt 2>stderr.txt

1 for output and 2 for error
ls -al >& fileoutput.txt




















